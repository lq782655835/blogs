(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{572:function(t,s,a){"use strict";a.r(s);var e=a(9),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),a("p",[t._v("正则表达式对于每个开发者都非常重要，用的好能在一些关键时刻让自己变得轻松。推荐个正则可视化工具："),a("a",{attrs:{href:"https://jex.im/regulex/#!flags=&re=%5E(a%7Cb)*%3F%24",target:"_blank",rel:"noopener noreferrer"}},[t._v("regulex"),a("OutboundLink")],1),t._v("，帮助学习者直观验证。再推荐"),a("a",{attrs:{href:"https://www.regextester.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Regex Tester"),a("OutboundLink")],1),t._v("进行在线调试。")]),t._v(" "),a("p",[t._v("原理：")]),t._v(" "),a("ol",[a("li",[t._v("解析\n"),a("ul",[a("li",[t._v("语法分析")]),t._v(" "),a("li",[t._v("词法分析")])])]),t._v(" "),a("li",[t._v("编译\n"),a("ul",[a("li",[t._v("状态机")])])]),t._v(" "),a("li",[t._v("运行")])]),t._v(" "),a("h2",{attrs:{id:"限定符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#限定符"}},[t._v("#")]),t._v(" 限定符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("次或多次\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("次或多次\n？ "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("次或"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("次\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" 匹配n次\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" 至少n次\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" 至少n次，至多m次\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\\ 转义符\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" 任意字符\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" 或运算\n\\d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\\"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\\w "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zA"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Z0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\\"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("W")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("zA"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Z0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v("_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\\s 空白字符\n\\"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),t._v(" 非空白字符\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" 定位符，字符串起始位置"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("当在"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("号时代表取反。\n$ 定位符，字符串末尾位置。\n")])])]),a("h2",{attrs:{id:"贪婪模式-非贪婪模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#贪婪模式-非贪婪模式"}},[t._v("#")]),t._v(" 贪婪模式/非贪婪模式")]),t._v(" "),a("p",[t._v("贪婪模式：在整个表达式匹配成功的前提下，尽可能多的匹配。常用的有"),a("code",[t._v("*")]),t._v(" 和 "),a("code",[t._v("+")]),t._v("限定符")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v(".*")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),t._v("\n")])])]),a("p",[t._v("非贪婪模式：在整个表达式匹配成功的前提下，尽可能少的匹配。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 遇到？，尽可能少的匹配")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("g\n")])])]),a("h2",{attrs:{id:"正则方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则方法"}},[t._v("#")]),t._v(" 正则方法")]),t._v(" "),a("h3",{attrs:{id:"regex-exec-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regex-exec-string"}},[t._v("#")]),t._v(" regex.exec(string)")]),t._v(" "),a("p",[t._v("如果匹配成功，exec() 方法返回一个数组;匹配失败，返回 null")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" regexExec "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("#(.*)$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:8081/#/demo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n[ '#/demo',\n'/demo',\nindex: 22,\ninput: 'http://localhost:8081/#/demo' ]\n*/")]),t._v("\n")])])]),a("h3",{attrs:{id:"regex-test-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#regex-test-string"}},[t._v("#")]),t._v(" regex.test(string)")]),t._v(" "),a("p",[t._v("查看正则表达式与指定的字符串是否匹配。返回 true 或 false")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" regexTest "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("#(.*)$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:8081/#/demo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("h3",{attrs:{id:"string-match-regex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-match-regex"}},[t._v("#")]),t._v(" string.match(regex)")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("在非全局匹配模式下")]),t._v("，类似regex.exec(string)。")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("全局匹配模式下(使用g标志)")]),t._v("，则将返回与完整正则表达式匹配的所有结果（Array），但不会返回捕获组，或者未匹配 null。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非全局匹配模式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" stringMatch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:8081/#/demo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("#(.*)$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ '#/demo',")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '/demo',")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index: 22,")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// input: 'http://localhost:8081/#/demo' ]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局匹配模式")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" stringMatch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:8081/#/demo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("#(.*)$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [ '#/demo' ]")]),t._v("\n")])])]),a("h3",{attrs:{id:"string-search-regex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-search-regex"}},[t._v("#")]),t._v(" string.search(regex)")]),t._v(" "),a("p",[t._v("匹配成功，search() 返回正则表达式在字符串中首次匹配项的索引，否则返回 -1。类似regex.test()")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" stringSearch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:8081/#/demo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("#(.*)$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 22")]),t._v("\n")])])]),a("h2",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("p",[t._v("其他正则相关语法@jawil总结的十分详细，故转载在此。\n以下图片有个谬误，这里纠正下："),a("code",[t._v("\\w")]),t._v(" 匹配一个单字字符（字母、数字或者下划线）。等价于 [A-Za-z0-9_]。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://camo.githubusercontent.com/0c015371b3762c589971a7b227c47b17791b1123/68747470733a2f2f73332e353163746f2e636f6d2f7779667330322f4d30312f38452f35362f774b696f4c31692d4a7a65546650394541414f6c376749536d6a343938302e676966",alt:""}})])])}),[],!1,null,null,null);s.default=r.exports}}]);